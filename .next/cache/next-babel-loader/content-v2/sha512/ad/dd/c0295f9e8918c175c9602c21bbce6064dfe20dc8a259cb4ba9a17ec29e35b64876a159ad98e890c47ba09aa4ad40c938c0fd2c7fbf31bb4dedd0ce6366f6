{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/irynastein/Desktop/Professional Development/React/NextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: props._id,\n    title: props.title,\n    image: props.image,\n    address: props.address,\n    description: props.des\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://iryna:6RwyAY296nVZqKVL@nextjsreactcourse.du60gme.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups');\n  const meetups = await meetupsCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //   {\n    //     params: {\n    //       meetupId: 'm1',\n    //     },\n    //     params: {\n    //       meetupId: 'm2',\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://iryna:6RwyAY296nVZqKVL@nextjsreactcourse.du60gme.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups');\n  const selectedMeetup = await meetupsCollections.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/irynastein/Desktop/Professional Development/React/NextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","_id","title","image","address","des","getStaticPaths","client","connect","db","meetupsCollections","collection","meetups","find","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,EAAE,EAAEA,KAAK,CAACC,GADZ;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACI,OAJjB;AAKE,IAAA,WAAW,EAAEJ,KAAK,CAACK;AALrB;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,gHADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AACA,QAAMC,OAAO,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA4B;AAAEZ,IAAAA,GAAG,EAAE;AAAP,GAA5B,EAAwCa,OAAxC,EAAtB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAAClB,GAAP,CAAWqB,QAAX;AADJ;AADsB,KAAb,CAAZ,CAFF,CAQL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBK,GAAP;AAmBD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,gHADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AACA,QAAMc,cAAc,GAAG,MAAMf,kBAAkB,CAACgB,OAAnB,CAA2B;AAAEzB,IAAAA,GAAG,EAAEoB;AAAP,GAA3B,CAA7B;AACAd,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACL2B,MAAAA,UAAU,EAAEF;AADP;AADF,GAAP;AAKD;AACD,eAAe1B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nconst MeetupDetails = (props) => {\n  return (\n    <MeetupDetail\n      id={props._id}\n      title={props.title}\n      image={props.image}\n      address={props.address}\n      description={props.des}\n    />\n  );\n};\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    'mongodb+srv://iryna:6RwyAY296nVZqKVL@nextjsreactcourse.du60gme.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups');\n  const meetups = await meetupsCollections.find({}, { _id: 1 }).toArray();\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n\n    // [\n    //   {\n    //     params: {\n    //       meetupId: 'm1',\n    //     },\n    //     params: {\n    //       meetupId: 'm2',\n    //     },\n    //   },\n    // ],\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\n    'mongodb+srv://iryna:6RwyAY296nVZqKVL@nextjsreactcourse.du60gme.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups');\n  const selectedMeetup = await meetupsCollections.findOne({ _id: meetupId });\n  client.close();\n\n  return {\n    props: {\n      meetupData: selectedMeetup,\n    },\n  };\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}